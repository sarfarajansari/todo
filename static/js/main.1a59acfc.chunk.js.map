{"version":3,"sources":["components/helper/clock/clock.jsx","components/helper/background/background.js","components/nav/nav.js","components/helper/appData/appData.js","components/helper/request/get_request.js","components/helper/list/list.js","components/helper/request/post_request.js","components/content/tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","useState","Date","value","setValue","useEffect","interval","setInterval","clearInterval","className","toDateString","toLocaleTimeString","Background","props","children","Nav","style","height","appData","url","Getreq","set","a","loaded","fetch","response","json","data","localStorage","setItem","token","console","log","Checkbox","task","done","type","name","String","id","onChange","e","p","index","getItem","target","checked","document","getElementById","textDecoration","textDecorationColor","animation","body","headers","requestdata","method","JSON","stringify","then","Postreq","setdata","List","list","map","delay","animationDuration","Tasks","tasks","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8SAEe,SAASA,IACtB,MAA0BC,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAVAC,qBAAU,WACR,IAAMC,EAAWC,aACf,kBAAMH,EAAS,IAAIF,QACnB,KAGF,OAAO,WACLM,cAAcF,MAEf,IAED,qCACE,qBAAKG,UAAU,8BAAf,SACGN,EAAMO,iBAET,oBAAGD,UAAU,OAAb,cAAsBN,EAAMQ,qBAA5B,U,UCDSC,EAjBI,SAACC,GAChB,OACI,sBAAKJ,UAAU,iBAAf,UACI,qBAAIA,UAAU,WAAd,UACI,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,0BAEHI,EAAMC,aCDJC,G,MAXH,WACR,OACI,sBAAKC,MAAO,CAACC,OAAO,QAApB,UACA,qBAAKR,UAAU,gBAAf,SACI,4CAEJ,4B,qCCJOS,EAJD,CACVC,IAAI,2CCAO,SAAeC,EAA9B,oC,4CAAe,WAAsBD,EAAIE,GAA1B,+BAAAC,EAAA,6DAA8BC,EAA9B,+BAAqC,GAArC,SACYC,MAAMN,EAAQC,IAAKA,GAD/B,cACLM,EADK,gBAEQA,EAASC,OAFjB,cAELC,EAFK,OAGXN,EAAIM,GACDJ,GACCA,EAAO,GAEP,UAAWI,GACXC,aAAaC,QAAQ,YAAYF,EAAKG,OAE1CC,QAAQC,IAAIL,GAVD,kBAWJ,GAXI,6C,gCCGTM,EAAS,SAACpB,GACZ,IAiBMqB,EAAOrB,EAAMqB,KACnB,IAAIA,EAAKC,KACL,OACI,uBAAQC,KAAK,WAAWC,KAAM,OAASC,OAAOJ,EAAKK,IAAKC,SApBjD,SAACC,GACZ,IAAIC,EAAG,IAAMJ,OAAOzB,EAAM8B,OACtBb,EAAQF,aAAagB,QAAQ,aAC9BH,EAAEI,OAAOC,SACRC,SAASC,eAAeN,GAAG1B,MAAMiC,eAAe,eAChDF,SAASC,eAAeN,GAAG1B,MAAMkC,oBAAoB,sBACrDH,SAASC,eAAeN,GAAG1B,MAAMmC,UAAU,iBCVxC,SAAiBhC,EAAIiC,GAAuB,IAAlB/B,EAAiB,uDAAb,GAAGE,EAAU,uDAAH,GACnD6B,EAAKtB,MAASF,aAAagB,QAAQ,aACnC,IAAIS,EAAU,CAAE,eAAgB,oBACM,OAAlCzB,aAAagB,QAAQ,WACrBS,EAAO,cAAkB,SAAWzB,aAAagB,QAAQ,UAE7D,IAAMU,EAAc,CAChBC,OAAQ,OACRF,QAASA,EACTD,KAAKI,KAAKC,UAAUL,IAExB5B,MAAMN,EAAQC,IAAKA,EAAImC,GACtBI,MAAK,SAACjC,GACH,OAAOA,EAASC,UAEnBgC,MAAK,SAAC/B,GACCN,GACAA,EAAIM,GAEJJ,GACAA,EAAO,MDTPoC,CAAQ,kBAAkB,CAAC,MAAQ7B,EAAM,GAAKjB,EAAMqB,KAAKK,KAEzDnB,EADU,eAAeU,EAAM,IACpBjB,EAAM+C,UAKjBb,SAASC,eAAeN,GAAG1B,MAAMiC,eAAe,WA4B7CY,EAlBF,SAAChD,GACV,OACI,qBAAKJ,UAAU,iBAAf,SAGKI,EAAMiD,KAAKC,KAAI,SAAC7B,EAAKS,GAClB,IAAIqB,EAAO1B,OAAgB,IAARK,EAAc,KAAK,KACtC,OACI,sBAAK3B,MAAO,CAACiD,kBAAkBD,GAA/B,UACI,gCAAK,cAAC,EAAD,CAAUJ,QAAS/C,EAAM+C,QAAS1B,KAAMA,EAAMS,MAAOA,IAA1D,OACC,mBAAGJ,GAAI,IAAMD,OAAOK,GAApB,SAA6BT,EAAKA,gBEX5CgC,EArBD,WACV,MAAyBjE,mBAAS,GAAlC,mBAAQmC,EAAR,KACA,GADA,KACwBnC,mBAAS,CAC7BkE,MAAM,MADV,mBAAOxC,EAAP,KAAaiC,EAAb,KAYA,OATAvD,qBAAU,WACN,IAAIyB,EAAM,SAC6B,OAApCF,aAAagB,QAAQ,eACpBd,EAAOF,aAAagB,QAAQ,cAGhCxB,EADU,aAAekB,OAAOF,GAAM,IAAIN,EAAM,IACrC8B,KACZ,IAGC,qBAAKnD,UAAU,gBAAf,SACI,cAAC,EAAD,CAAMqD,KAAMnC,EAAKwC,MAAOP,QAASA,OCM9BQ,MArBf,WAEE,OACE,mCACA,cAAC,EAAD,CAAYtD,SACV,sBAAKyB,GAAG,OAAR,UACA,sBAAKA,GAAG,SAAR,UAAiB,cAAC,EAAD,IAAjB,OACA,sBAAKA,GAAG,UAAR,UACE,cAACvC,EAAD,IACA,cAAC,EAAD,OAIF,qBAAKuC,GAAG,SAAR,SAAiB,iCCTR8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASC,eAAe,SAM1BqB,M","file":"static/js/main.1a59acfc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./clock.css\"\r\nexport default function Clock() {\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(\r\n      () => setValue(new Date()),\r\n      1000\r\n    );\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"box-element clock-container\">\r\n        {value.toDateString()}\r\n      </div>\r\n      <p className=\"time\"> {value.toLocaleTimeString()} </p>\r\n\r\n    </>\r\n  )\r\n}","import \"./bg.css\";\r\n\r\nconst Background = (props) => {\r\n    return (\r\n        <div className=\"animation-area\">\r\n            <ul className=\"box-area\">\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n            </ul>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Background;\r\n","import \"./nav.css\"\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div style={{height:\"100%\"}}>\r\n        <div className=\"nav-container\">\r\n            <h1>TODO APP</h1>\r\n        </div>\r\n        <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","const appData={\r\n    url:\"https://sarfaraj4444.pythonanywhere.com\"\r\n}\r\n\r\nexport default appData;","import appData from \"../appData/appData\"\r\nexport default async function Getreq(url,set,loaded=\"\") {\r\n    const response = await fetch(appData.url+ url)\r\n    const data = await response.json()\r\n    set(data)\r\n    if(loaded){\r\n        loaded(0)\r\n    }\r\n    if (\"token\" in data) {\r\n        localStorage.setItem(\"taskToken\",data.token)\r\n    }\r\n    console.log(data)\r\n    return 0\r\n}","import Getreq from \"../request/get_request\";\r\nimport Postreq from \"../request/post_request\";\r\nimport \"./list.css\";\r\n\r\nconst Checkbox=(props)=>{\r\n    const complete=(e)=>{\r\n        var p =\"p\" + String(props.index)\r\n        var token = localStorage.getItem(\"taskToken\")\r\n        if(e.target.checked){\r\n            document.getElementById(p).style.textDecoration=\"line-through\"\r\n            document.getElementById(p).style.textDecorationColor=\"rgba(15, 19, 66, 1)\"\r\n            document.getElementById(p).style.animation=\"fade 1s linear\"\r\n            Postreq(\"/todo/complete/\",{\"token\":token,\"id\":props.task.id})\r\n            var url = \"/todo/get/0/\"+token+\"/\" ;\r\n            Getreq(url,props.setdata)\r\n            \r\n            \r\n        }\r\n        else{\r\n            document.getElementById(p).style.textDecoration=\"none\"\r\n        }\r\n    }\r\n    const task = props.task\r\n    if(!task.done){\r\n        return(\r\n            <input  type=\"checkbox\" name={\"task\" + String(task.id)} onChange={complete}/>\r\n        )\r\n    }\r\n}\r\nconst List = (props) => {\r\n    return (\r\n        <div className=\"list-container\">\r\n            \r\n\r\n            {props.list.map((task,index)=>{\r\n                var delay =String((index * 500) +500)+\"ms\" ;\r\n                return(\r\n                    <div style={{animationDuration:delay}}>\r\n                        <div><Checkbox setdata={props.setdata} task={task} index={index}/> </div>\r\n                         <p id={\"p\" + String(index)}>{task.task}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;\r\n","import appData from \"../appData/appData\"\r\nexport default function Postreq(url,body,set=\"\",loaded=\"\"){\r\n    body.token =  localStorage.getItem('taskToken')\r\n    var headers = { 'Content-Type': 'application/json' }\r\n    if (localStorage.getItem('Token') !== null){\r\n        headers[\"Authorization\"]=\"Token \" + localStorage.getItem('Token')\r\n    }\r\n    const requestdata = {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body:JSON.stringify(body)\r\n    }\r\n    fetch(appData.url+ url,requestdata)\r\n    .then((response)=>{\r\n        return response.json()\r\n    })\r\n    .then((data)=>{\r\n        if (set){\r\n            set(data)\r\n        }\r\n        if (loaded){\r\n            loaded(0)\r\n        }\r\n    })\r\n}","import { useState,useEffect } from \"react\"\r\nimport \"./tasks.css\"\r\nimport Getreq from \"../helper/request/get_request\"\r\nimport Postreq from \"../helper/request/post_request\"\r\nimport List from \"../helper/list/list\"\r\n\r\n\r\nconst Tasks = () => {\r\n    const  [type, settype] = useState(0)\r\n    const [data, setdata] = useState({\r\n        tasks:[]\r\n    })\r\n    useEffect(() => {\r\n        var token=\"create\"\r\n        if(localStorage.getItem(\"taskToken\")!==null) {\r\n            token= localStorage.getItem(\"taskToken\")\r\n        }\r\n        var url = \"/todo/get/\" + String(type)+\"/\"+token+\"/\" ;\r\n        Getreq(url,setdata)\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"any-container\">\r\n            <List list={data.tasks} setdata={setdata}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;\r\n","import \"./App.css\";\nimport Clock from \"./components/helper/clock/clock\";\nimport Background from \"./components/helper/background/background\";\nimport Nav from \"./components/nav/nav\";\nimport \"./components/helper/typography/typography.css\"\nimport Tasks from \"./components/content/tasks\";\n\n\nfunction App() {\n \n  return (\n    <>\n    <Background children={\n      <div id=\"grid\">\n      <div id=\"navbar\"><Nav/> </div>\n      <div id=\"content\">\n        <Clock/>\n        <Tasks/>\n        \n\n        </div>\n      <div id=\"footer\"><hr/></div>\n    </div>\n    }/>\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}